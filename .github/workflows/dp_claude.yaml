name: Deploy claude

on:
    push:
        branches: [ "master" ]
        # branches: [ "other" ]
    pull_request:
        branches: [ "master" ]
        # branches: [ "other" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # - name: Cache Docker layers
    #   uses: actions/cache@v3
    #   with:
    #     path: /tmp/.buildx-cache
    #     key: ${{ runner.os }}-buildx-${{ github.sha }}
    #     restore-keys: |
    #       ${{ runner.os }}-buildx-

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        # password: ${{ secrets.DOCKER_TOKEN }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./pj1
        file: ./pj1/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Deploy to Tencent Cloud
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.TENCENT_HOST }}
        username: ${{ secrets.TENCENT_USERNAME }}
        key: ${{ secrets.TENCENT_PRI_SSH_KEY }}
        script: |
          cd /www/wwwroot/docker-django-demo
          git pull
          echo "PJ1_IMAGE=${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}" > .env
          sudo docker compose pull
          sudo docker compose up -d

# permision

        #   docker system prune -af