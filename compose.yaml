# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  db:
    image: mysql:latest
    # env_file: ".env"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - 3306:3306  # 暴露端口方便本地查看
  db2:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  web1:
    image: zzdnb/docker_django_demo:V1.0.0
    build:
      context: ./pj1
    ports:
      - 8001:8000
    volumes:
      - .:/app  # 挂载本地所有文件!!
      - static_data:/app/pj1/collected_static
      - media_data:/app/pj1/media
    environment:
      - WEB_HOST=web111
      - DB_HOST=db2
      - DB_TYPE=postgres
      # - DB_TYPE=mysql
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - NGINX_PORT=${NGINX_PORT}
    # env_file: ".env"
    depends_on:
      - db

  web2:
    image: zzdnb/docker_django_demo:V1.0.0
    build:
      context: ./pj1
    ports:
      - 8002:8000
    volumes:
      - .:/app  # 挂载本地所有文件!!
      - static_data:/app/pj1/collected_static
      - media_data:/app/pj1/media
    environment:
      - WEB_HOST=web222
      - DB_HOST=db2
      - DB_TYPE=postgres
      # - DB_TYPE=mysql
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - NGINX_PORT=${NGINX_PORT}
    # env_file: ".env"
    depends_on:
      - db
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "${NGINX_PORT}:8000"  # 环境变量设置对外port
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_data:/pj1/collected_static
      - media_data:/pj1/media
    depends_on:
      - web1
      - web2
volumes:
  db_data:
  postgres_data:
  static_data:
  media_data:
