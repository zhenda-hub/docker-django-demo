# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  db:
    image: mysql:latest
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: yourpassword
      MYSQL_DATABASE: yourdbname
      MYSQL_USER: yourdbuser
      MYSQL_PASSWORD: yourdbpassword
    volumes:
      - db_data:/var/lib/mysql

  web1:
    build:
      context: ./pj1
    ports:
      - 8001:8000
    volumes:
      - .:/app  # 挂载本地所有文件!!
    environment:
      - DB_HOST=db
      - WEB_HOST=web111
      - DB_NAME=yourdbname
      - DB_USER=yourdbuser
      - DB_PASSWORD=yourdbpassword
    depends_on:
      - db

  web2:
    build:
      context: ./pj1
    ports:
      - 8002:8000
    volumes:
      - .:/app  # 挂载本地所有文件!!
    environment:
      - DB_HOST=db
      - WEB_HOST=web222
      - DB_NAME=yourdbname
      - DB_USER=yourdbuser
      - DB_PASSWORD=yourdbpassword
    depends_on:
      - db
  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - web1
  #     - web2
volumes:
  db_data:
